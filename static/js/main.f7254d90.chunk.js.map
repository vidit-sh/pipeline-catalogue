{"version":3,"sources":["components/Header/Header.jsx","constants.js","components/Bucket/Bucket.jsx","components/Bucket/Bucket.styles.js","components/OptionsSelector/OptionsSelector.jsx","components/OptionsSelector/OptionsSelector.styles.js","components/AvailableOptions/AvailableOptions.jsx","components/SelectedOptions/SelectedOptions.jsx","utils/lists.js","components/Configurations/Configurations.jsx","components/Configurations/Configurations.styles.js","components/SolutionTab/SolutionTab.jsx","components/SolutionTab/SolutionTab.styles.js","components/App/App.jsx","components/App/App.styles.js","index.js"],"names":["withStyles","props","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","Typography_default","variant","color","globalBuckets","theme","Object","objectSpread","mixins","gutters","marginBottom","spacing","unit","paddingTop","paddingBottom","heading","fontSize","list","width","backgroundColor","palette","background","paper","listDragged","listItemDragged","pink","listItemTextDragged","_ref","bucketName","items","type","droppableBucket","index_es","elevation","component","react_beautiful_dnd_esm","droppableId","concat","isDropDisabled","toConsumableArray","indexOf","provided","snapshot","assign","classnames","isDraggingOver","ref","innerRef","droppableProps","dense","map","item","index","key","Name","draggableId","RootRef_default","rootRef","draggableProps","dragHandleProps","style","isDragging","undefined","primary","placeholder","marginTop","title","stages","bucket","Bucket_Bucket","AvailableOptions","availableItems","OptionsSelector_OptionsSelector","SelectedOptions","selectedItems","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","sourceIndex","destinationIndex","sourceClone","destClone","_sourceClone$splice","Mustache","require","Configurations","state","expanded","pipelineRef","configRef","handleChange","panel","event","_this","setState","download","content","filename","arguments","length","blob","Blob","saveAs","fetch","configResponse","text","this","configTemplate","pipelineResponse","pipelineTemplate","_this2","_this$props","usedConfigs","onChange","expandIcon","ExpandMore_default","details","code","element","render","keys","name","commands","reduce","accu","isArray","Command","libraries","Library","isStageVisible","Button_default","size","btnSave","onClick","innerText","Save_default","btnIcon","React","Component","flex-basis","marginRight","flex-wrap","SolutionTab","selectedArchetype","data","Set","target","value","onDragEnd","sourceColumnItems","destinationColumnItems","_this$state","_source$droppableId$s","split","_source$droppableId$s2","sourceColumn","sourceBucket","_destination$droppabl","_destination$droppabl2","destinationColumn","destinationBucket","rearranged","prevState","defineProperty","newUsedConfigs","add","Config","delete","onDragStart","_this$state2","archStages","autoComplete","formControl","htmlFor","inputProps","id","arch","container","justify","xs","AvailableOptions_AvailableOptions","SelectedOptions_SelectedOptions","components_Configurations_Configurations","minWidth","App","currentSol","onTabClick","Header","tabs","sol","label","components_SolutionTab_SolutionTab","padding","ReactDOM","components_App_App","document","getElementById"],"mappings":"8SA0BeA,2BAAW,GAAXA,CAnBf,SAAsBC,GAAO,IACnBC,EAAYD,EAAZC,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,SAAS,UACfN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,QAAQ,KAAKC,MAAM,WAA/B,4HCbGC,EAAgB,CAAC,QCqFfd,2BCnFA,SAAAe,GAAK,MAAK,CACvBR,KAAKS,OAAAC,EAAA,EAAAD,CAAA,GACAD,EAAMG,OAAOC,UADd,CAEFC,aAAmC,EAArBL,EAAMM,QAAQC,KAC5BC,WAAiC,EAArBR,EAAMM,QAAQC,KAC1BE,cAAoC,EAArBT,EAAMM,QAAQC,OAE/BG,QAAS,CACPC,SAAU,OACVN,aAAmC,EAArBL,EAAMM,QAAQC,MAE9BK,KAAM,CACJC,MAAO,OACPC,gBAAiBd,EAAMe,QAAQC,WAAWC,OAE5CC,YAAa,CACXJ,gBAAiB,aAEnBK,gBAAiB,CACfL,gBAAiBM,OAAK,MAExBC,oBAAqB,CACnBvB,MAAO,UD6DIb,CApEf,SAAAqC,GAAuE,IAArDnC,EAAqDmC,EAArDnC,QAASoC,EAA4CD,EAA5CC,WAAYC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,gBAClD,OACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOpC,UAAWJ,EAAQK,KAAMoC,UAAW,GACzCxC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAY9B,QAAQ,KAAKgC,UAAU,MAChCN,GAEHnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,YAAW,GAAAC,OAAKP,EAAL,KAAAO,OAAaT,EAAb,cACXU,eACEhC,OAAAiC,EAAA,EAAAjC,CAAIF,GAAJiC,OAAA,CAAmBT,IAAYY,QAAQT,GAAmB,GAG3D,SAACU,EAAUC,GAAX,OACCjD,EAAAC,EAAAC,cAAA,MAAAW,OAAAqC,OAAA,CACE/C,UAAWgD,IACTpD,EAAQyB,KACRyB,EAASG,gBAAkBrD,EAAQ+B,aAErCuB,IAAKL,EAASM,UACVN,EAASO,gBAEbvD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMiB,OAAO,GACVpB,GAASA,EAAMD,GACZC,EAAMD,GAAYsB,IAAI,SAACC,EAAMC,GAAP,OACpB3D,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEkB,IAAKF,EAAKG,KACVC,YAAW,GAAAlB,OAAKP,EAAL,KAAAO,OAAaT,EAAb,KAAAS,OAA2Bc,EAAKG,MAC3CF,MAAOA,GAEN,SAACX,EAAUC,GAAX,OACCjD,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAS+D,QAAShB,EAASM,UACzBtD,EAAAC,EAAAC,cAACqC,EAAA,EAAD1B,OAAAqC,OAAA,GACMF,EAASiB,eACTjB,EAASkB,gBAFf,CAGEC,MAAOnB,EAASiB,eAAeE,MAC/BpE,QAAS,CACPK,KAAM6C,EAASmB,WACXrE,EAAQgC,qBACRsC,KAGNrE,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACE+B,QAASZ,EAAKG,KACd9D,QAAS,CACPuE,QAASrB,EAASmB,WACdrE,EAAQkC,yBACRoC,WAQlB,KACHrB,EAASuB,mBEnCT1E,2BCrCA,SAAAe,GAAK,MAAK,CACvBU,QAAS,CACPC,SAAU,OACVN,aAAmC,EAArBL,EAAMM,QAAQC,KAC5BqD,UAAgC,EAArB5D,EAAMM,QAAQC,QDiCdtB,CA7Bf,SAAAqC,GAQG,IAPD/B,EAOC+B,EAPD/B,UACAJ,EAMCmC,EANDnC,QACAqC,EAKCF,EALDE,MACAqC,EAICvC,EAJDuC,MACApC,EAGCH,EAHDG,KACAC,EAECJ,EAFDI,gBACAoC,EACCxC,EADDwC,OAEA,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAWgD,IAAWhD,EAAWJ,EAAQK,OAC5CJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,QAAQ,KAAKN,UAAWJ,EAAQuB,SACzCmD,GAEFC,EAAOjB,IAAI,SAAAkB,GACV,OACE3E,EAAAC,EAAAC,cAAC0E,EAAD,CACEhB,IAAKe,EACLxC,WAAYwC,EACZvC,MAAOA,EACPC,KAAMA,EACNC,gBAAiBA,SERduC,MAlBf,SAAA3C,GAKG,IAJD/B,EAIC+B,EAJD/B,UACA2E,EAGC5C,EAHD4C,eACAxC,EAECJ,EAFDI,gBACAoC,EACCxC,EADDwC,OAEA,OACE1E,EAAAC,EAAAC,cAAC6E,EAAD,CACE5E,UAAWA,EACXiC,MAAO0C,EACPL,MAAM,oBACNpC,KAAK,YACLC,gBAAiBA,EACjBoC,OAAQA,KCKCM,MAlBf,SAAA9C,GAKG,IAJD/B,EAIC+B,EAJD/B,UACA8E,EAGC/C,EAHD+C,cACA3C,EAECJ,EAFDI,gBACAoC,EACCxC,EADDwC,OAEA,OACE1E,EAAAC,EAAAC,cAAC6E,EAAD,CACE5E,UAAWA,EACXiC,MAAO6C,EACPR,MAAM,mBACNpC,KAAK,WACLC,gBAAiBA,EACjBoC,OAAQA,KCfDQ,EAAU,SAAC1D,EAAM2D,EAAYC,GACxC,IAAMC,EAASC,MAAMC,KAAK/D,GAD2BgE,EAEnCH,EAAOI,OAAON,EAAY,GAArCO,EAF8C7E,OAAA8E,EAAA,EAAA9E,CAAA2E,EAAA,MAKrD,OAFAH,EAAOI,OAAOL,EAAU,EAAGM,GAEpBL,GAMIO,EAAO,SAACC,EAAQC,EAAaC,EAAaC,GACrD,IAAMC,EAAcX,MAAMC,KAAKM,GACzBK,EAAYZ,MAAMC,KAAKO,GAAe,IAF8BK,EAGxDF,EAAYR,OAAOM,EAAa,GAA3CL,EAHmE7E,OAAA8E,EAAA,EAAA9E,CAAAsF,EAAA,MAQ1E,OAHAD,EAAUT,OAAOO,EAAkB,EAAGN,GAEvB,CAAEG,OAAQI,EAAaH,YAAaI,sGCH/CE,EAAWC,EAAQ,KAEnBC,6MACJC,MAAQ,CACNC,SAAU,QAGZC,YAAc,OACdC,UAAY,OAaZC,aAAe,SAAAC,GAAK,OAAI,SAACC,EAAOL,GAC9BM,EAAKC,SAAS,CACZP,WAAUA,GAAWI,QAIzBI,SAAW,SAACC,GAA+B,IAAtBC,EAAsBC,UAAAC,OAAA,QAAA/C,IAAA8C,UAAA,GAAAA,UAAA,GAAX,OAC9B,GAAKF,EAAL,CACA,IAAII,EAAO,IAAIC,KAAK,CAACL,IACrBM,IAAOF,EAAMH,wNAnBgBM,MAC3B,wDADIC,kBAGsBA,EAAeC,qBAA3CC,KAAKC,+BAC0BJ,MAC7B,0DADIK,mBAGwBA,EAAiBH,eAA/CC,KAAKG,4JAeE,IAAAC,EAAAJ,KAAAK,EACoDL,KAAK7H,MAAxDK,EADD6H,EACC7H,UAAWJ,EADZiI,EACYjI,QAASkI,EADrBD,EACqBC,YAAahD,EADlC+C,EACkC/C,cACjCuB,EAAamB,KAAKpB,MAAlBC,SACR,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAWgD,IAAWhD,EAAWJ,EAAQK,OAC5CJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,QAAQ,KAAKN,UAAWJ,EAAQuB,SAA5C,kBAGAtB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEiE,SAAuB,aAAbA,EACV0B,SAAUP,KAAKhB,aAAa,aAE5B3G,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAuB4F,WAAYnI,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,OACjCD,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYE,UAAWJ,EAAQuB,SAA/B,aAEFtB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAuBpC,UAAWJ,EAAQsI,SACxCrI,EAAAC,EAAAC,cAAA,OACEC,UAAWJ,EAAQuI,KACnBjF,IAAK,SAAAkF,GAAO,OAAKR,EAAKtB,YAAc8B,IAEnCZ,KAAKG,iBACF1B,EAASoC,OAAOb,KAAKG,iBAAkB,CACrC7C,cAAepE,OAAO4H,KAAKxD,GAAexB,IAAI,SAAAG,GAAG,MAAK,CACpD8E,KAAM9E,EACN+E,SAAU1D,EAAcrB,GAAKgF,OAC3B,SAACC,EAAMnF,GAAP,OACE4B,MAAMwD,QAAQpF,EAAKqF,SACfF,EAAKjG,OAAOc,EAAKqF,SADrBlI,OAAAiC,EAAA,EAAAjC,CAEQgI,GAFRjG,OAAA,CAEcc,EAAKqF,WACrB,IAEFC,UAAW/D,EAAcrB,GAAKH,IAAI,SAAAC,GAAI,OAAIA,EAAKuF,UAC/CC,iBACIjE,EAAcrB,IAAQqB,EAAcrB,GAAKwD,YAGjD,MAENpH,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,CACEQ,QAAQ,YACRC,MAAM,YACN0I,KAAK,QACLjJ,UAAWJ,EAAQsJ,QACnBC,QAAS,WACPvB,EAAKf,SAASe,EAAKtB,YAAY8C,UAAW,cAG5CvJ,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAUE,UAAWJ,EAAQ0J,UAT/B,UAcJzJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEiE,SAAuB,WAAbA,EACV0B,SAAUP,KAAKhB,aAAa,WAE5B3G,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAuB4F,WAAYnI,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,OACjCD,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYE,UAAWJ,EAAQuB,SAA/B,WAEFtB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAuBpC,UAAWJ,EAAQsI,SACxCrI,EAAAC,EAAAC,cAAA,OACEC,UAAWJ,EAAQuI,KACnBjF,IAAK,SAAAkF,GAAO,OAAKR,EAAKrB,UAAY6B,IAEjCZ,KAAKC,eACFxB,EAASoC,OAAOb,KAAKC,eAAgB,CACnCK,YAAa3C,MAAMC,KAAK0C,KAG1B,MAENjI,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,CACEQ,QAAQ,YACRC,MAAM,YACN0I,KAAK,QACLjJ,UAAWJ,EAAQsJ,QACnBC,QAAS,WACPvB,EAAKf,SAASe,EAAKrB,UAAU6C,UAAW,YAG1CvJ,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CAAUE,UAAWJ,EAAQ0J,UAT/B,kBAtGiBC,IAAMC,WAyHpB9J,uBC3IA,SAAAe,GAAK,MAAK,CACvBU,QAAS,CACPC,SAAU,OACVN,aAAmC,EAArBL,EAAMM,QAAQC,KAC5BqD,UAAgC,EAArB5D,EAAMM,QAAQC,MAE3BmH,KAAM,CACJsB,aAAc,QAEhBP,QAAS,CACP7E,UAAgC,EAArB5D,EAAMM,QAAQC,KACzBF,aAAmC,EAArBL,EAAMM,QAAQC,MAE9BsI,QAAS,CACPI,YAAajJ,EAAMM,QAAQC,MAE7BkH,QAAS,CACPyB,YAAa,UD0HFjK,CAAmByG,GEzH5ByD,6MACJxD,MAAQ,CACNyD,kBAAmBnJ,OAAO4H,KAAK3B,EAAKhH,MAAMmK,MAAM,GAChDnF,eAAgBgC,EAAKhH,MAAMmK,KAAKpJ,OAAO4H,KAAK3B,EAAKhH,MAAMmK,MAAM,IAC7DhF,cAAe,GACfgD,YAAa,IAAIiC,IACjB5H,gBAAiB,QAGnBqE,aAAe,SAAAE,GACbC,EAAKC,SAAS,CACZiD,kBAAmBnD,EAAMsD,OAAOC,MAChCtF,eAAgBgC,EAAKhH,MAAMmK,KAAKpD,EAAMsD,OAAOC,OAC7CnF,cAAe,GACfgD,YAAa,IAAIiC,SAIrBG,UAAY,SAAAhF,GAAU,IACZQ,EAAwBR,EAAxBQ,OAAQC,EAAgBT,EAAhBS,YAGhB,GAAKA,EAAL,CAJoB,IAahBwE,EAAmBC,EAbHC,EAOsB1D,EAAKP,MAAvCzB,EAPY0F,EAOZ1F,eAAgBG,EAPJuF,EAOIvF,cAPJwF,EAQiB5E,EAAOlD,YAAY+H,MAAM,KAR1CC,EAAA9J,OAAA8E,EAAA,EAAA9E,CAAA4J,EAAA,GAQbG,EARaD,EAAA,GAQCE,EARDF,EAAA,GAAAG,EAYhBhF,EAAYnD,YAAY+H,MAAM,KAZdK,EAAAlK,OAAA8E,EAAA,EAAA9E,CAAAiK,EAAA,GAUlBE,EAVkBD,EAAA,GAWlBE,EAXkBF,EAAA,GAuBpB,GARqB,cAAjBH,GACFN,EAAoBxF,EACpByF,EAAyBtF,IAEzBqF,EAAoBrF,EACpBsF,EAAyBzF,GAGvB8F,IAAiBI,EAAmB,CACtC,IAAME,EAAahG,EACjBoF,EAAkBO,GAClBhF,EAAOlC,MACPmC,EAAYnC,OAEdmD,EAAKC,SAAS,SAAAoE,GACZ,MAAwB,cAAjBP,EACH,CACE9F,eAAejE,OAAAC,EAAA,EAAAD,CAAA,GACVsK,EAAUrG,eADDjE,OAAAuK,EAAA,EAAAvK,CAAA,GAEXgK,EAAeK,IAElB5I,gBAAiB,MAEnB,CACE2C,cAAcpE,OAAAC,EAAA,EAAAD,CAAA,GACTsK,EAAUlG,cADFpE,OAAAuK,EAAA,EAAAvK,CAAA,GAEVgK,EAAeK,IAElB5I,gBAAiB,YAGpB,CACL,IAAM4I,EAAatF,EACjB0E,EAAkBO,GAClBN,EAAuBU,GACvBpF,EAAOlC,MACPmC,EAAYnC,OAEdmD,EAAKC,SAAS,SAAAoE,GACZ,IAAME,EAAiB,IAAInB,IAAIiB,EAAUlD,aACzC,MAAqB,cAAjB2C,GACFS,EAAeC,IAAIxG,EAAe+F,GAAchF,EAAOlC,OAAO4H,QACvD,CACLzG,eAAejE,OAAAC,EAAA,EAAAD,CAAA,GACVsK,EAAUrG,eADDjE,OAAAuK,EAAA,EAAAvK,CAAA,GAEXgK,EAAeK,EAAWrF,SAE7BZ,cAAcpE,OAAAC,EAAA,EAAAD,CAAA,GACTsK,EAAUlG,cADFpE,OAAAuK,EAAA,EAAAvK,CAAA,GAEVoK,EAAoBC,EAAWpF,cAElCxD,gBAAiB,KACjB2F,YAAaoD,KAGfA,EAAeG,OACbvG,EAAc4F,GAAchF,EAAOlC,OAAO4H,QAErC,CACLzG,eAAejE,OAAAC,EAAA,EAAAD,CAAA,GACVsK,EAAUrG,eADDjE,OAAAuK,EAAA,EAAAvK,CAAA,GAEXoK,EAAoBC,EAAWpF,cAElCb,cAAcpE,OAAAC,EAAA,EAAAD,CAAA,GACTsK,EAAUlG,cADFpE,OAAAuK,EAAA,EAAAvK,CAAA,GAEVgK,EAAeK,EAAWrF,SAE7BvD,gBAAiB,KACjB2F,YAAaoD,WAOvBI,YAAc,SAAAvJ,GAAgB,IAEtByC,EAFsBzC,EAAb2D,OACPlD,YACmB+H,MAAM,KAAK,GACtC5D,EAAKC,SAAS,CACZzE,gBAAiBqC,OAIrB6D,OAAS,WAAM,IAAAR,EACwBlB,EAAKhH,MAAlCK,EADK6H,EACL7H,UAAWJ,EADNiI,EACMjI,QAASkK,EADfjC,EACeiC,KADfyB,EAQT5E,EAAKP,MALPyD,EAHW0B,EAGX1B,kBACAlF,EAJW4G,EAIX5G,eACAG,EALWyG,EAKXzG,cACA3C,EANWoJ,EAMXpJ,gBACA2F,EAPWyD,EAOXzD,YAGI0D,EAAa9K,OAAO4H,KAAKwB,EAAKD,IAEpC,OACEhK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAWA,EAAWyL,aAAa,OACvC5L,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAapC,UAAWJ,EAAQ8L,aAC9B7L,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAYuJ,QAAQ,QAClB9L,EAAAC,EAAAC,cAACqC,EAAA,EAAD,mBAEFvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACE6H,MAAOJ,EACP9B,SAAUpB,EAAKH,aACfoF,WAAY,CACVrD,KAAM,YACNsD,GAAI,SAGLnL,OAAO4H,KAAKwB,GAAMxG,IAAI,SAAAwI,GAAI,OACzBjM,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUqB,IAAKqI,EAAM7B,MAAO6B,GAC1BjM,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KAAa0J,SAMvBjM,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACE2H,UAAWvD,EAAKuD,UAChBoB,YAAa3E,EAAK2E,aAElBzL,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAM2J,WAAS,EAACC,QAAQ,SAASjL,QAAS,IACxClB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMmB,MAAI,EAAC0I,GAAI,GACbpM,EAAAC,EAAAC,cAACmM,EAAD,CACEvH,eAAgBA,EAChBxC,gBAAiBA,EACjBoC,OAAQiH,KAGZ3L,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMmB,MAAI,EAAC0I,GAAI,GACbpM,EAAAC,EAAAC,cAACoM,EAAD,CACErH,cAAeA,EACf3C,gBAAiBA,EACjBoC,OAAQiH,KAGZ3L,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMmB,MAAI,EAAC0I,GAAI,GACbpM,EAAAC,EAAAC,cAACqM,EAAD,CACEtE,YAAaA,EACbhD,cAAeA,sCA7KLyE,IAAMC,WAuLjB9J,wBCzMA,SAAAe,GAAK,MAAK,CACvBiL,YAAa,CACXW,SAAU,IACVhI,UAAW5D,EAAMM,QAAQC,QDsMdtB,CAAmBkK,GEjM5B0C,8MACJlG,MAAQ,CACNmG,WAAY,KAGdC,WAAa,SAAC9F,EAAOuD,GACnBtD,EAAKC,SAAS,CAAE2F,WAAYtC,6EAGrB,IACCrK,EAAY4H,KAAK7H,MAAjBC,QACA2M,EAAe/E,KAAKpB,MAApBmG,WAER,OACE1M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0M,EAAD,MACA5M,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQ8M,MACtB7M,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAM6H,MAAOsC,EAAYxE,SAAUP,KAAKgF,YACrC9L,OAAO4H,KAAKwB,GAAMxG,IAAI,SAAAqJ,GAAG,OACxB9M,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKqB,IAAKkJ,EAAKC,MAAOD,OAGzBjM,OAAO4H,KAAKwB,GAAMxG,IACjB,SAACqJ,EAAKnJ,GAAN,OACE+I,IAAe/I,EACb3D,EAAAC,EAAAC,cAAC8M,GAAD,CAAapJ,IAAKkJ,EAAK7C,KAAMA,EAAK6C,KAChC,gBA1BAnD,aAkCH9J,wBC1CA,SAAAe,GAAK,MAAK,CACvBiM,KAAM,CACJI,QAA8B,EAArBrM,EAAMM,QAAQC,QDwCZtB,CAAmB4M,IErClCS,IAAS1E,OAAOxI,EAAAC,EAAAC,cAACiN,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.f7254d90.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Pipeline Catalogue\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles({})(ButtonAppBar);\n","export const globalBuckets = [\"Misc\"];\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Bucket.styles\";\nimport { globalBuckets } from \"../../constants\";\n\nfunction Bucket({ classes, bucketName, items, type, droppableBucket }) {\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Typography variant=\"h6\" component=\"h6\">\n        {bucketName}\n      </Typography>\n      <Droppable\n        droppableId={`${type}-${bucketName}-Droppable`}\n        isDropDisabled={\n          [...globalBuckets, bucketName].indexOf(droppableBucket) < 0\n        }\n      >\n        {(provided, snapshot) => (\n          <div\n            className={classnames(\n              classes.list,\n              snapshot.isDraggingOver && classes.listDragged\n            )}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <List dense={true}>\n              {items && items[bucketName]\n                ? items[bucketName].map((item, index) => (\n                    <Draggable\n                      key={item.Name}\n                      draggableId={`${type}-${bucketName}-${item.Name}`}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <RootRef rootRef={provided.innerRef}>\n                          <ListItem\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={provided.draggableProps.style}\n                            classes={{\n                              root: snapshot.isDragging\n                                ? classes.listItemDragged\n                                : undefined\n                            }}\n                          >\n                            <ListItemText\n                              primary={item.Name}\n                              classes={{\n                                primary: snapshot.isDragging\n                                  ? classes.listItemTextDragged\n                                  : undefined\n                              }}\n                            />\n                          </ListItem>\n                        </RootRef>\n                      )}\n                    </Draggable>\n                  ))\n                : null}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    </Paper>\n  );\n}\n\nBucket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Bucket);\n","import { pink } from \"@material-ui/core/colors\";\n\nexport default theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listDragged: {\n    backgroundColor: \"lightgrey\"\n  },\n  listItemDragged: {\n    backgroundColor: pink[500]\n  },\n  listItemTextDragged: {\n    color: \"#fff\"\n  }\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\n\nimport Bucket from \"../Bucket\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./OptionsSelector.styles\";\n\nfunction OptionsSelector({\n  className,\n  classes,\n  items,\n  title,\n  type,\n  droppableBucket,\n  stages\n}) {\n  return (\n    <div className={classnames(className, classes.root)}>\n      <Typography variant=\"h2\" className={classes.heading}>\n        {title}\n      </Typography>\n      {stages.map(bucket => {\n        return (\n          <Bucket\n            key={bucket}\n            bucketName={bucket}\n            items={items}\n            type={type}\n            droppableBucket={droppableBucket}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(OptionsSelector);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction AvailableOptions({\n  className,\n  availableItems,\n  droppableBucket,\n  stages\n}) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={availableItems}\n      title=\"Available Options\"\n      type=\"available\"\n      droppableBucket={droppableBucket}\n      stages={stages}\n    />\n  );\n}\n\nexport default AvailableOptions;\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction SelectedOptions({\n  className,\n  selectedItems,\n  droppableBucket,\n  stages\n}) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={selectedItems}\n      title=\"Selected Options\"\n      type=\"selected\"\n      droppableBucket={droppableBucket}\n      stages={stages}\n    />\n  );\n}\n\nexport default SelectedOptions;\n","// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, sourceIndex, destinationIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination || []);\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  const result = { source: sourceClone, destination: destClone };\n  return result;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport classnames from \"classnames\";\nimport saveAs from \"file-saver\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport {\n  withStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport styles from \"./Configurations.styles\";\n\nconst Mustache = require(\"mustache\");\n\nclass Configurations extends React.Component {\n  state = {\n    expanded: null\n  };\n\n  pipelineRef = null;\n  configRef = null;\n\n  async componentDidMount() {\n    const configResponse = await fetch(\n      \"./static/templates/config.template.mst\"\n    );\n    this.configTemplate = await configResponse.text();\n    const pipelineResponse = await fetch(\n      \"./static/templates/pipeline.template.mst\"\n    );\n    this.pipelineTemplate = await pipelineResponse.text();\n  }\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false\n    });\n  };\n\n  download = (content, filename = \"file\") => {\n    if (!content) return;\n    var blob = new Blob([content]);\n    saveAs(blob, filename);\n  };\n\n  render() {\n    const { className, classes, usedConfigs, selectedItems } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className={classnames(className, classes.root)}>\n        <Typography variant=\"h2\" className={classes.heading}>\n          Configurations\n        </Typography>\n        <ExpansionPanel\n          expanded={expanded === \"pipeline\"}\n          onChange={this.handleChange(\"pipeline\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Pipeline</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.details}>\n            <pre\n              className={classes.code}\n              ref={element => (this.pipelineRef = element)}\n            >\n              {this.pipelineTemplate\n                ? Mustache.render(this.pipelineTemplate, {\n                    selectedItems: Object.keys(selectedItems).map(key => ({\n                      name: key,\n                      commands: selectedItems[key].reduce(\n                        (accu, item) =>\n                          Array.isArray(item.Command)\n                            ? accu.concat(item.Command)\n                            : [...accu, item.Command],\n                        []\n                      ),\n                      libraries: selectedItems[key].map(item => item.Library),\n                      isStageVisible:\n                        !!selectedItems[key] && selectedItems[key].length\n                    }))\n                  })\n                : null}\n            </pre>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"small\"\n              className={classes.btnSave}\n              onClick={() => {\n                this.download(this.pipelineRef.innerText, \"pipeline\");\n              }}\n            >\n              <SaveIcon className={classes.btnIcon} />\n              Save\n            </Button>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel\n          expanded={expanded === \"config\"}\n          onChange={this.handleChange(\"config\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Config</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.details}>\n            <pre\n              className={classes.code}\n              ref={element => (this.configRef = element)}\n            >\n              {this.configTemplate\n                ? Mustache.render(this.configTemplate, {\n                    usedConfigs: Array.from(usedConfigs)\n                    // showLibraries: usedConfigs.size\n                  })\n                : null}\n            </pre>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"small\"\n              className={classes.btnSave}\n              onClick={() => {\n                this.download(this.configRef.innerText, \"config\");\n              }}\n            >\n              <SaveIcon className={classes.btnIcon} />\n              Save\n            </Button>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Configurations);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  },\n  code: {\n    \"flex-basis\": \"100%\"\n  },\n  btnSave: {\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 2\n  },\n  btnIcon: {\n    marginRight: theme.spacing.unit\n  },\n  details: {\n    \"flex-wrap\": \"wrap\"\n  }\n});\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  withStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport styles from \"./SolutionTab.styles\";\nimport AvailableOptions from \"../AvailableOptions\";\nimport SelectedOptions from \"../SelectedOptions\";\nimport { move, reorder } from \"../../utils/lists\";\nimport Configurations from \"../Configurations\";\n\nclass SolutionTab extends React.Component {\n  state = {\n    selectedArchetype: Object.keys(this.props.data)[0],\n    availableItems: this.props.data[Object.keys(this.props.data)[0]],\n    selectedItems: {},\n    usedConfigs: new Set(),\n    droppableBucket: null\n  };\n\n  handleChange = event => {\n    this.setState({\n      selectedArchetype: event.target.value,\n      availableItems: this.props.data[event.target.value],\n      selectedItems: {},\n      usedConfigs: new Set()\n    });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const { availableItems, selectedItems } = this.state;\n    const [sourceColumn, sourceBucket] = source.droppableId.split(\"-\");\n    const [\n      destinationColumn,\n      destinationBucket\n    ] = destination.droppableId.split(\"-\");\n    let sourceColumnItems, destinationColumnItems;\n\n    if (sourceColumn === \"available\") {\n      sourceColumnItems = availableItems;\n      destinationColumnItems = selectedItems;\n    } else {\n      sourceColumnItems = selectedItems;\n      destinationColumnItems = availableItems;\n    }\n\n    if (sourceColumn === destinationColumn) {\n      const rearranged = reorder(\n        sourceColumnItems[sourceBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            }\n          : {\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            };\n      });\n    } else {\n      const rearranged = move(\n        sourceColumnItems[sourceBucket],\n        destinationColumnItems[destinationBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        const newUsedConfigs = new Set(prevState.usedConfigs);\n        if (sourceColumn === \"available\") {\n          newUsedConfigs.add(availableItems[sourceBucket][source.index].Config);\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [sourceBucket]: rearranged.source\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [destinationBucket]: rearranged.destination\n            },\n            droppableBucket: null,\n            usedConfigs: newUsedConfigs\n          };\n        } else {\n          newUsedConfigs.delete(\n            selectedItems[sourceBucket][source.index].Config\n          );\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [destinationBucket]: rearranged.destination\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [sourceBucket]: rearranged.source\n            },\n            droppableBucket: null,\n            usedConfigs: newUsedConfigs\n          };\n        }\n      });\n    }\n  };\n\n  onDragStart = ({ source }) => {\n    const { droppableId } = source;\n    const bucket = droppableId.split(\"-\")[1];\n    this.setState({\n      droppableBucket: bucket\n    });\n  };\n\n  render = () => {\n    const { className, classes, data } = this.props;\n    const {\n      selectedArchetype,\n      availableItems,\n      selectedItems,\n      droppableBucket,\n      usedConfigs\n    } = this.state;\n\n    const archStages = Object.keys(data[selectedArchetype]);\n\n    return (\n      <div>\n        <form className={className} autoComplete=\"off\">\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"arch\">\n              <Typography>Archetype</Typography>\n            </InputLabel>\n            <Select\n              value={selectedArchetype}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"archetype\",\n                id: \"arch\"\n              }}\n            >\n              {Object.keys(data).map(arch => (\n                <MenuItem key={arch} value={arch}>\n                  <Typography>{arch}</Typography>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </form>\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Grid container justify=\"center\" spacing={32}>\n            <Grid item xs={3}>\n              <AvailableOptions\n                availableItems={availableItems}\n                droppableBucket={droppableBucket}\n                stages={archStages}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SelectedOptions\n                selectedItems={selectedItems}\n                droppableBucket={droppableBucket}\n                stages={archStages}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Configurations\n                usedConfigs={usedConfigs}\n                selectedItems={selectedItems}\n              />\n            </Grid>\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  };\n}\n\nexport default withStyles(styles)(SolutionTab);\n","export default theme => ({\n  formControl: {\n    minWidth: 120,\n    marginTop: theme.spacing.unit\n  }\n});\n","import React, { Component } from \"react\";\n\nimport Header from \"../Header\";\nimport { Tabs, Tab, withStyles } from \"@material-ui/core\";\nimport data from \"../../data/libraries.json\";\nimport SolutionTab from \"../SolutionTab/SolutionTab\";\nimport styles from \"./App.styles\";\n\nclass App extends Component {\n  state = {\n    currentSol: 0\n  };\n\n  onTabClick = (event, value) => {\n    this.setState({ currentSol: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { currentSol } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <div className={classes.tabs}>\n          <Tabs value={currentSol} onChange={this.onTabClick}>\n            {Object.keys(data).map(sol => (\n              <Tab key={sol} label={sol} />\n            ))}\n          </Tabs>\n          {Object.keys(data).map(\n            (sol, index) =>\n              currentSol === index ? (\n                <SolutionTab key={sol} data={data[sol]} />\n              ) : null\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default theme => ({\n  tabs: {\n    padding: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}