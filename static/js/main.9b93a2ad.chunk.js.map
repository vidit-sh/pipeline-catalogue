{"version":3,"sources":["utils/lists.js","constants.js","components/Bucket/Bucket.jsx","components/Bucket/Bucket.styles.js","components/OptionsSelector/OptionsSelector.jsx","components/OptionsSelector/OptionsSelector.styles.js","components/AvailableOptions/AvailableOptions.jsx","components/SelectedOptions/SelectedOptions.jsx","components/Header/Header.jsx","components/Configurations/Configurations.jsx","components/Configurations/Configurations.styles.js","data/libraries/index.js","components/App/App.jsx","index.js"],"names":["reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","Object","slicedToArray","move","source","destination","sourceIndex","destinationIndex","sourceClone","destClone","_sourceClone$splice","globalBuckets","withStyles","theme","root","objectSpread","mixins","gutters","marginBottom","spacing","unit","paddingTop","paddingBottom","heading","fontSize","width","backgroundColor","palette","background","paper","listDragged","listItemDragged","pink","listItemTextDragged","color","_ref","classes","bucketName","items","type","droppableBucket","react_default","a","createElement","index_es","className","elevation","variant","component","react_beautiful_dnd_esm","droppableId","concat","isDropDisabled","toConsumableArray","indexOf","provided","snapshot","assign","classnames","isDraggingOver","ref","innerRef","droppableProps","dense","map","item","index","key","draggableId","RootRef_default","rootRef","draggableProps","dragHandleProps","style","isDragging","undefined","primary","placeholder","marginTop","title","Typography_default","stages","bucket","Bucket_Bucket","name","AvailableOptions","availableItems","OptionsSelector_OptionsSelector","SelectedOptions","selectedItems","props","AppBar_default","position","Toolbar_default","Configurations","state","expanded","handleChange","panel","event","_this","setState","_this$props","this","onChange","expandIcon","ExpandMore_default","React","Component","libraries","reduce","accu","curr","newAccu","keys","methods","forEach","method","stage","push","App","onDragEnd","sourceColumnItems","destinationColumnItems","_this$state","_source$droppableId$s","split","_source$droppableId$s2","sourceColumn","sourceBucket","_destination$droppabl","_destination$droppabl2","destinationColumn","destinationBucket","rearranged","prevState","defineProperty","onDragStart","_this$state2","Header","Grid_default","container","justify","xs","AvailableOptions_AvailableOptions","SelectedOptions_SelectedOptions","components_Configurations_Configurations","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b93a2ad.chunk.js","sourcesContent":["// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, sourceIndex, destinationIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination || []);\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  const result = { source: sourceClone, destination: destClone };\n  return result;\n};\n","export const globalBuckets = [\"Misc\"];\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Bucket.styles\";\nimport { globalBuckets } from \"../../constants\";\n\nfunction Bucket({ classes, bucketName, items, type, droppableBucket }) {\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Typography variant=\"h6\" component=\"h6\">\n        {bucketName}\n      </Typography>\n      <Droppable\n        droppableId={`${type}-${bucketName}-Droppable`}\n        isDropDisabled={\n          [...globalBuckets, bucketName].indexOf(droppableBucket) < 0\n        }\n      >\n        {(provided, snapshot) => (\n          <div\n            className={classnames(\n              classes.list,\n              snapshot.isDraggingOver && classes.listDragged\n            )}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <List dense={true}>\n              {items && items[bucketName]\n                ? items[bucketName].map((item, index) => (\n                    <Draggable\n                      key={item}\n                      draggableId={`${type}-${item}`}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <RootRef rootRef={provided.innerRef}>\n                          <ListItem\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={provided.draggableProps.style}\n                            classes={{\n                              root: snapshot.isDragging\n                                ? classes.listItemDragged\n                                : undefined\n                            }}\n                          >\n                            <ListItemText\n                              primary={item}\n                              classes={{\n                                primary: snapshot.isDragging\n                                  ? classes.listItemTextDragged\n                                  : undefined\n                              }}\n                            />\n                          </ListItem>\n                        </RootRef>\n                      )}\n                    </Draggable>\n                  ))\n                : null}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    </Paper>\n  );\n}\n\nBucket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Bucket);\n","import { pink } from \"@material-ui/core/colors\";\n\nexport default theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listDragged: {\n    backgroundColor: \"lightgrey\"\n  },\n  listItemDragged: {\n    backgroundColor: pink[500]\n  },\n  listItemTextDragged: {\n    color: \"#fff\"\n  }\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\n\nimport { stages } from \"../../data/config.json\";\nimport Bucket from \"../Bucket\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./OptionsSelector.styles\";\n\nfunction OptionsSelector({\n  className,\n  classes,\n  items,\n  title,\n  type,\n  droppableBucket\n}) {\n  return (\n    <div className={classnames(className, classes.root)}>\n      <Typography variant=\"h2\" className={classes.heading}>\n        {title}\n      </Typography>\n      {stages.map(bucket => {\n        return (\n          <Bucket\n            key={bucket.name}\n            bucketName={bucket.name}\n            items={items}\n            type={type}\n            droppableBucket={droppableBucket}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(OptionsSelector);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction AvailableOptions({ className, availableItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={availableItems}\n      title=\"Available Options\"\n      type=\"available\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default AvailableOptions;\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction SelectedOptions({ className, selectedItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={selectedItems}\n      title=\"Selected Options\"\n      type=\"selected\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default SelectedOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Pipeline Catalogue\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles({})(ButtonAppBar);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport classnames from \"classnames\";\n\nimport {\n  withStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport styles from \"./Configurations.styles\";\n\nclass Configurations extends React.Component {\n  state = {\n    expanded: null\n  };\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false\n    });\n  };\n\n  render() {\n    const { className, classes } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className={classnames(className, classes.root)}>\n        <Typography variant=\"h2\" className={classes.heading}>\n          Configurations\n        </Typography>\n        <ExpansionPanel\n          expanded={expanded === \"pipeline\"}\n          onChange={this.handleChange(\"pipeline\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Pipeline</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>Content</Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel\n          expanded={expanded === \"config\"}\n          onChange={this.handleChange(\"config\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              config/Jenkinsfile.yaml\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>Content</Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Configurations);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import core from \"./core/core.json\";\nimport node from \"./node/node.json\";\n\nconst libraries = [core, node];\n\nexport default libraries.reduce((accu, curr) => {\n  let newAccu = { ...accu };\n  Object.keys(curr.methods).forEach(method => {\n    const stage = curr.methods[method].stage || \"Misc\";\n    newAccu[stage] = newAccu[stage] || [];\n    newAccu[stage].push(`${curr.key}.${method}`);\n  });\n  return newAccu;\n}, {});\n","import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { move, reorder } from \"../../utils/lists\";\nimport AvailableOptions from \"../AvailableOptions\";\nimport SelectedOptions from \"../SelectedOptions/\";\nimport Header from \"../Header\";\nimport Configurations from \"../Configurations\";\nimport methods from \"../../data/libraries\";\n\n// fake data generator\nconst getItems = (prefix, count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `${prefix}-item-${k + offset}`,\n    content: `${prefix}-item ${k + offset}`\n  }));\n\nclass App extends Component {\n  state = {\n    availableItems: methods,\n    selectedItems: {},\n    // availableItems: buckets.reduce(\n    //   (accu, curr) => ({ ...accu, [curr]: getItems(curr, 2) }),\n    //   {}\n    // ),\n    // selectedItems: buckets.reduce(\n    //   (accu, curr) => ({ ...accu, [curr]: [] }),\n    //   {}\n    // ),\n    droppableBucket: null\n  };\n\n  onDragEnd = result => {\n    const { source, destination, type } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const { availableItems, selectedItems } = this.state;\n    const [sourceColumn, sourceBucket] = source.droppableId.split(\"-\");\n    const [\n      destinationColumn,\n      destinationBucket\n    ] = destination.droppableId.split(\"-\");\n    let sourceColumnItems, destinationColumnItems;\n\n    if (sourceColumn === \"available\") {\n      sourceColumnItems = availableItems;\n      destinationColumnItems = selectedItems;\n    } else {\n      sourceColumnItems = selectedItems;\n      destinationColumnItems = availableItems;\n    }\n\n    if (sourceColumn === destinationColumn) {\n      const rearranged = reorder(\n        sourceColumnItems[sourceBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            }\n          : {\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            };\n      });\n    } else {\n      const rearranged = move(\n        sourceColumnItems[sourceBucket],\n        destinationColumnItems[destinationBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged.source\n              },\n              selectedItems: {\n                ...prevState.selectedItems,\n                [destinationBucket]: rearranged.destination\n              },\n              droppableBucket: null\n            }\n          : {\n              availableItems: {\n                ...prevState.availableItems,\n                [destinationBucket]: rearranged.destination\n              },\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged.source\n              },\n              droppableBucket: null\n            };\n      });\n    }\n  };\n\n  onDragStart = ({ source }) => {\n    const { droppableId } = source;\n    const bucket = droppableId.split(\"-\")[1];\n    this.setState({\n      droppableBucket: bucket\n    });\n  };\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const { availableItems, selectedItems, droppableBucket } = this.state;\n    return (\n      <div>\n        <Header />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Grid container justify=\"center\" spacing={32}>\n            <Grid item xs={3}>\n              <AvailableOptions\n                availableItems={availableItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SelectedOptions\n                selectedItems={selectedItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Configurations />\n            </Grid>\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}