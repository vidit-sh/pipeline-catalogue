{"version":3,"sources":["utils/lists.js","constants.js","components/Bucket/Bucket.jsx","components/Bucket/Bucket.styles.js","components/OptionsSelector/OptionsSelector.jsx","components/OptionsSelector/OptionsSelector.styles.js","components/AvailableOptions/AvailableOptions.jsx","components/SelectedOptions/SelectedOptions.jsx","components/Header/Header.jsx","components/Configurations/Configurations.jsx","components/App/App.jsx","index.js"],"names":["reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","Object","slicedToArray","move","source","destination","sourceIndex","destinationIndex","sourceClone","destClone","_sourceClone$splice","buckets","withStyles","theme","root","objectSpread","mixins","gutters","marginBottom","spacing","unit","paddingTop","paddingBottom","heading","fontSize","width","backgroundColor","palette","background","paper","listDragged","listItemDragged","pink","listItemTextDragged","color","_ref","classes","bucket","items","type","droppableBucket","react_default","a","createElement","index_es","className","elevation","variant","component","react_beautiful_dnd_esm","droppableId","concat","isDropDisabled","provided","snapshot","assign","classnames","isDraggingOver","ref","innerRef","droppableProps","dense","map","item","index","key","id","draggableId","RootRef_default","rootRef","draggableProps","dragHandleProps","style","isDragging","undefined","primary","content","placeholder","marginTop","title","Typography_default","Bucket_Bucket","AvailableOptions","availableItems","OptionsSelector_OptionsSelector","SelectedOptions","selectedItems","props","AppBar_default","position","Toolbar_default","Configurations","getItems","prefix","count","offset","arguments","length","v","k","App","state","reduce","accu","curr","defineProperty","onDragEnd","sourceColumnItems","destinationColumnItems","_this$state","_this","_source$droppableId$s","split","_source$droppableId$s2","sourceColumn","sourceBucket","_destination$droppabl","_destination$droppabl2","destinationColumn","destinationBucket","rearranged","setState","prevState","console","log","JSON","stringify","onDragStart","_this$state2","this","Header","Grid_default","container","justify","xs","AvailableOptions_AvailableOptions","SelectedOptions_SelectedOptions","components_Configurations_Configurations","Component","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.cd08478c.chunk.js","sourcesContent":["// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, sourceIndex, destinationIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  const result = { source: sourceClone, destination: destClone };\n  return result;\n};\n","export const buckets = [\n  \"Initialize\",\n  \"Build\",\n  \"Test\",\n  \"Package\",\n  \"Deploy\",\n  \"E2E\",\n  \"Release\",\n  \"Misc\"\n];\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Bucket.styles\";\n\nfunction Bucket({ classes, bucket, items, type, droppableBucket }) {\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Typography variant=\"h6\" component=\"h6\">\n        {bucket}\n      </Typography>\n      <Droppable\n        droppableId={`${type}-${bucket}-Droppable`}\n        isDropDisabled={droppableBucket !== bucket}\n      >\n        {(provided, snapshot) => (\n          <div\n            className={classnames(\n              classes.list,\n              snapshot.isDraggingOver && classes.listDragged\n            )}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <List dense={true}>\n              {items[bucket].map((item, index) => (\n                <Draggable\n                  key={item.id}\n                  draggableId={`${type}-${item.id}`}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <RootRef rootRef={provided.innerRef}>\n                      <ListItem\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={provided.draggableProps.style}\n                        classes={{\n                          root: snapshot.isDragging\n                            ? classes.listItemDragged\n                            : undefined\n                        }}\n                      >\n                        <ListItemText\n                          primary={item.content}\n                          classes={{\n                            primary: snapshot.isDragging\n                              ? classes.listItemTextDragged\n                              : undefined\n                          }}\n                        />\n                      </ListItem>\n                    </RootRef>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    </Paper>\n  );\n}\n\nBucket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Bucket);\n","import { pink } from \"@material-ui/core/colors\";\n\nexport default theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listDragged: {\n    backgroundColor: \"lightgrey\"\n  },\n  listItemDragged: {\n    backgroundColor: pink[500]\n  },\n  listItemTextDragged: {\n    color: \"#fff\"\n  }\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\n\nimport { buckets } from \"../../constants\";\n\nimport Bucket from \"../Bucket\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./OptionsSelector.styles\";\n\nfunction OptionsSelector({\n  className,\n  classes,\n  items,\n  title,\n  type,\n  droppableBucket\n}) {\n  return (\n    <div className={classnames(className, classes.root)}>\n      <Typography variant=\"h2\" className={classes.heading}>\n        {title}\n      </Typography>\n      {buckets.map(bucket => {\n        return (\n          <Bucket\n            key={bucket}\n            bucket={bucket}\n            items={items}\n            type={type}\n            droppableBucket={droppableBucket}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(OptionsSelector);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction AvailableOptions({ className, availableItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={availableItems}\n      title=\"Available Options\"\n      type=\"available\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default AvailableOptions;\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction SelectedOptions({ className, selectedItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={selectedItems}\n      title=\"Selected Options\"\n      type=\"selected\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default SelectedOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Pipeline Catalogue\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles({})(ButtonAppBar);\n","import React from \"react\";\n\nconst Configurations = () => <div>Configurations</div>;\n\nexport default Configurations;\n","import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { move, reorder } from \"../../utils/lists\";\nimport AvailableOptions from \"../AvailableOptions\";\nimport SelectedOptions from \"../SelectedOptions/\";\nimport { buckets } from \"../../constants\";\nimport Header from \"../Header\";\nimport Configurations from \"../Configurations/Configurations\";\n\n// fake data generator\nconst getItems = (prefix, count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `${prefix}-item-${k + offset}`,\n    content: `${prefix}-item ${k + offset}`\n  }));\n\nclass App extends Component {\n  state = {\n    availableItems: buckets.reduce(\n      (accu, curr) => ({ ...accu, [curr]: getItems(curr, 2) }),\n      {}\n    ),\n    selectedItems: buckets.reduce(\n      (accu, curr) => ({ ...accu, [curr]: [] }),\n      {}\n    ),\n    droppableBucket: null\n  };\n\n  onDragEnd = result => {\n    const { source, destination, type } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const { availableItems, selectedItems } = this.state;\n    const [sourceColumn, sourceBucket] = source.droppableId.split(\"-\");\n    const [\n      destinationColumn,\n      destinationBucket\n    ] = destination.droppableId.split(\"-\");\n    let sourceColumnItems, destinationColumnItems;\n\n    if (sourceColumn === \"available\") {\n      sourceColumnItems = availableItems;\n      destinationColumnItems = selectedItems;\n    } else {\n      sourceColumnItems = selectedItems;\n      destinationColumnItems = availableItems;\n    }\n\n    if (sourceColumn === destinationColumn) {\n      const rearranged = reorder(\n        sourceColumnItems[sourceBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            }\n          : {\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            };\n      });\n    } else {\n      const rearranged = move(\n        sourceColumnItems[sourceBucket],\n        destinationColumnItems[destinationBucket],\n        source.index,\n        destination.index\n      );\n      console.log(JSON.stringify(rearranged));\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged.source\n              },\n              selectedItems: {\n                ...prevState.selectedItems,\n                [destinationBucket]: rearranged.destination\n              },\n              droppableBucket: null\n            }\n          : {\n              availableItems: {\n                ...prevState.availableItems,\n                [destinationBucket]: rearranged.destination\n              },\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged.source\n              },\n              droppableBucket: null\n            };\n      });\n    }\n  };\n\n  onDragStart = ({ source }) => {\n    const { droppableId } = source;\n    const bucket = droppableId.split(\"-\")[1];\n    this.setState({\n      droppableBucket: bucket\n    });\n  };\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const { availableItems, selectedItems, droppableBucket } = this.state;\n    return (\n      <div>\n        <Header />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Grid container justify=\"center\" spacing={32}>\n            <Grid item xs={3}>\n              <AvailableOptions\n                availableItems={availableItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SelectedOptions\n                selectedItems={selectedItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Configurations />\n            </Grid>\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}