{"version":3,"sources":["components/Header/Header.jsx","constants.js","components/Bucket/Bucket.jsx","components/Bucket/Bucket.styles.js","components/OptionsSelector/OptionsSelector.jsx","components/OptionsSelector/OptionsSelector.styles.js","components/AvailableOptions/AvailableOptions.jsx","components/SelectedOptions/SelectedOptions.jsx","utils/lists.js","components/Configurations/Configurations.jsx","components/Configurations/Configurations.styles.js","components/SolutionTab/SolutionTab.jsx","components/SolutionTab/SolutionTab.styles.js","components/App/App.jsx","components/App/App.styles.js","index.js"],"names":["withStyles","props","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","Typography_default","variant","color","globalBuckets","theme","Object","objectSpread","mixins","gutters","marginBottom","spacing","unit","paddingTop","paddingBottom","heading","fontSize","list","width","backgroundColor","palette","background","paper","listDragged","listItemDragged","pink","listItemTextDragged","_ref","bucketName","items","type","droppableBucket","index_es","elevation","component","react_beautiful_dnd_esm","droppableId","concat","isDropDisabled","toConsumableArray","indexOf","provided","snapshot","assign","classnames","isDraggingOver","ref","innerRef","droppableProps","dense","map","item","index","key","Name","draggableId","RootRef_default","rootRef","draggableProps","dragHandleProps","style","isDragging","undefined","primary","placeholder","marginTop","title","stages","bucket","Bucket_Bucket","AvailableOptions","availableItems","OptionsSelector_OptionsSelector","SelectedOptions","selectedItems","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","sourceIndex","destinationIndex","sourceClone","destClone","_sourceClone$splice","Mustache","require","Configurations","state","expanded","handleChange","panel","event","_this","setState","fetch","configResponse","text","this","configTemplate","pipelineResponse","pipelineTemplate","_this$props","usedLibraries","onChange","expandIcon","ExpandMore_default","render","keys","name","commands","Command","isVisible","length","libraries","showLibraries","size","React","Component","SolutionTab","selectedArchetype","data","Set","target","value","onDragEnd","sourceColumnItems","destinationColumnItems","_this$state","_source$droppableId$s","split","_source$droppableId$s2","sourceColumn","sourceBucket","_destination$droppabl","_destination$droppabl2","destinationColumn","destinationBucket","rearranged","prevState","defineProperty","newUsedLibraries","add","Library","delete","onDragStart","_this$state2","autoComplete","formControl","htmlFor","inputProps","id","arch","container","justify","xs","AvailableOptions_AvailableOptions","SelectedOptions_SelectedOptions","components_Configurations_Configurations","minWidth","App","currentSol","onTabClick","Header","tabs","sol","label","components_SolutionTab_SolutionTab","padding","ReactDOM","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f362d1a4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Pipeline Catalogue\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles({})(ButtonAppBar);\n","export const globalBuckets = [\"Misc\"];\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Bucket.styles\";\nimport { globalBuckets } from \"../../constants\";\n\nfunction Bucket({ classes, bucketName, items, type, droppableBucket }) {\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Typography variant=\"h6\" component=\"h6\">\n        {bucketName}\n      </Typography>\n      <Droppable\n        droppableId={`${type}-${bucketName}-Droppable`}\n        isDropDisabled={\n          [...globalBuckets, bucketName].indexOf(droppableBucket) < 0\n        }\n      >\n        {(provided, snapshot) => (\n          <div\n            className={classnames(\n              classes.list,\n              snapshot.isDraggingOver && classes.listDragged\n            )}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <List dense={true}>\n              {items && items[bucketName]\n                ? items[bucketName].map((item, index) => (\n                    <Draggable\n                      key={item.Name}\n                      draggableId={`${type}-${bucketName}-${item.Name}`}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <RootRef rootRef={provided.innerRef}>\n                          <ListItem\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={provided.draggableProps.style}\n                            classes={{\n                              root: snapshot.isDragging\n                                ? classes.listItemDragged\n                                : undefined\n                            }}\n                          >\n                            <ListItemText\n                              primary={item.Name}\n                              classes={{\n                                primary: snapshot.isDragging\n                                  ? classes.listItemTextDragged\n                                  : undefined\n                              }}\n                            />\n                          </ListItem>\n                        </RootRef>\n                      )}\n                    </Draggable>\n                  ))\n                : null}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    </Paper>\n  );\n}\n\nBucket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Bucket);\n","import { pink } from \"@material-ui/core/colors\";\n\nexport default theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listDragged: {\n    backgroundColor: \"lightgrey\"\n  },\n  listItemDragged: {\n    backgroundColor: pink[500]\n  },\n  listItemTextDragged: {\n    color: \"#fff\"\n  }\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\n\nimport stages from \"../../data/stages.json\";\nimport Bucket from \"../Bucket\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./OptionsSelector.styles\";\n\nfunction OptionsSelector({\n  className,\n  classes,\n  items,\n  title,\n  type,\n  droppableBucket\n}) {\n  return (\n    <div className={classnames(className, classes.root)}>\n      <Typography variant=\"h2\" className={classes.heading}>\n        {title}\n      </Typography>\n      {stages.map(bucket => {\n        return (\n          <Bucket\n            key={bucket}\n            bucketName={bucket}\n            items={items}\n            type={type}\n            droppableBucket={droppableBucket}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(OptionsSelector);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction AvailableOptions({ className, availableItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={availableItems}\n      title=\"Available Options\"\n      type=\"available\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default AvailableOptions;\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction SelectedOptions({ className, selectedItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={selectedItems}\n      title=\"Selected Options\"\n      type=\"selected\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default SelectedOptions;\n","// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, sourceIndex, destinationIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination || []);\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  const result = { source: sourceClone, destination: destClone };\n  return result;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport classnames from \"classnames\";\n\nimport {\n  withStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport styles from \"./Configurations.styles\";\n\nconst Mustache = require(\"mustache\");\n\nclass Configurations extends React.Component {\n  state = {\n    expanded: null\n  };\n\n  async componentDidMount() {\n    const configResponse = await fetch(\"/static/templates/config.template.mst\");\n    this.configTemplate = await configResponse.text();\n    const pipelineResponse = await fetch(\"/static/templates/pipeline.template.mst\");\n    this.pipelineTemplate = await pipelineResponse.text();\n  }\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false\n    });\n  };\n\n  render() {\n    const { className, classes, usedLibraries, selectedItems } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className={classnames(className, classes.root)}>\n        <Typography variant=\"h2\" className={classes.heading}>\n          Configurations\n        </Typography>\n        <ExpansionPanel\n          expanded={expanded === \"pipeline\"}\n          onChange={this.handleChange(\"pipeline\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Pipeline</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <pre>\n              {this.pipelineTemplate\n                ? Mustache.render(this.pipelineTemplate, {\n                    selectedItems: Object.keys(selectedItems).map(key => ({\n                      name: key,\n                      commands: selectedItems[key].map(item => item.Command),\n                      isVisible:\n                        !!selectedItems[key] && selectedItems[key].length\n                    }))\n                  })\n                : null}\n            </pre>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel\n          expanded={expanded === \"config\"}\n          onChange={this.handleChange(\"config\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              config/Jenkinsfile.yaml\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <pre>\n              {this.configTemplate\n                ? Mustache.render(this.configTemplate, {\n                    libraries: Array.from(usedLibraries),\n                    showLibraries: usedLibraries.size\n                  })\n                : null}\n            </pre>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Configurations);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  withStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport styles from \"./SolutionTab.styles\";\nimport AvailableOptions from \"../AvailableOptions\";\nimport SelectedOptions from \"../SelectedOptions\";\nimport { move, reorder } from \"../../utils/lists\";\nimport Configurations from \"../Configurations\";\n\nclass SolutionTab extends React.Component {\n  state = {\n    selectedArchetype: Object.keys(this.props.data)[0],\n    availableItems: this.props.data[Object.keys(this.props.data)[0]],\n    selectedItems: {},\n    usedLibraries: new Set(),\n    droppableBucket: null\n  };\n\n  handleChange = event => {\n    this.setState({\n      selectedArchetype: event.target.value\n    });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const { availableItems, selectedItems } = this.state;\n    const [sourceColumn, sourceBucket] = source.droppableId.split(\"-\");\n    const [\n      destinationColumn,\n      destinationBucket\n    ] = destination.droppableId.split(\"-\");\n    let sourceColumnItems, destinationColumnItems;\n\n    if (sourceColumn === \"available\") {\n      sourceColumnItems = availableItems;\n      destinationColumnItems = selectedItems;\n    } else {\n      sourceColumnItems = selectedItems;\n      destinationColumnItems = availableItems;\n    }\n\n    if (sourceColumn === destinationColumn) {\n      const rearranged = reorder(\n        sourceColumnItems[sourceBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            }\n          : {\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            };\n      });\n    } else {\n      const rearranged = move(\n        sourceColumnItems[sourceBucket],\n        destinationColumnItems[destinationBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        const newUsedLibraries = new Set(prevState.usedLibraries);\n        if (sourceColumn === \"available\") {\n          newUsedLibraries.add(\n            availableItems[sourceBucket][source.index].Library\n          );\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [sourceBucket]: rearranged.source\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [destinationBucket]: rearranged.destination\n            },\n            droppableBucket: null,\n            usedLibraries: newUsedLibraries\n          };\n        } else {\n          newUsedLibraries.delete(\n            selectedItems[sourceBucket][source.index].Library\n          );\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [destinationBucket]: rearranged.destination\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [sourceBucket]: rearranged.source\n            },\n            droppableBucket: null,\n            usedLibraries: newUsedLibraries\n          };\n        }\n      });\n    }\n  };\n\n  onDragStart = ({ source }) => {\n    const { droppableId } = source;\n    const bucket = droppableId.split(\"-\")[1];\n    this.setState({\n      droppableBucket: bucket\n    });\n  };\n\n  render = () => {\n    const { className, classes, data } = this.props;\n    const {\n      selectedArchetype,\n      availableItems,\n      selectedItems,\n      droppableBucket,\n      usedLibraries\n    } = this.state;\n    return (\n      <div>\n        <form className={className} autoComplete=\"off\">\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"arch\">\n              <Typography>Archetype</Typography>\n            </InputLabel>\n            <Select\n              value={selectedArchetype}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"archetype\",\n                id: \"arch\"\n              }}\n            >\n              {Object.keys(data).map(arch => (\n                <MenuItem key={arch} value={arch}>\n                  <Typography>{arch}</Typography>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </form>\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Grid container justify=\"center\" spacing={32}>\n            <Grid item xs={3}>\n              <AvailableOptions\n                availableItems={availableItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SelectedOptions\n                selectedItems={selectedItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Configurations usedLibraries={usedLibraries} selectedItems={selectedItems}/>\n            </Grid>\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  };\n}\n\nexport default withStyles(styles)(SolutionTab);\n","export default theme => ({\n  formControl: {\n    minWidth: 120,\n    marginTop: theme.spacing.unit\n  }\n});\n","import React, { Component } from \"react\";\n\nimport Header from \"../Header\";\nimport { Tabs, Tab, withStyles } from \"@material-ui/core\";\nimport data from \"../../data/libraries.json\";\nimport SolutionTab from \"../SolutionTab/SolutionTab\";\nimport styles from \"./App.styles\";\n\nclass App extends Component {\n  state = {\n    currentSol: 0\n  };\n\n  onTabClick = (event, value) => {\n    this.setState({ currentSol: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { currentSol } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <div className={classes.tabs}>\n          <Tabs value={currentSol} onChange={this.onTabClick}>\n            {Object.keys(data).map(sol => (\n              <Tab key={sol} label={sol} />\n            ))}\n          </Tabs>\n          {Object.keys(data).map(\n            (sol, index) =>\n              currentSol === index ? (\n                <SolutionTab key={sol} data={data[sol]} />\n              ) : null\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default theme => ({\n  tabs: {\n    padding: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}