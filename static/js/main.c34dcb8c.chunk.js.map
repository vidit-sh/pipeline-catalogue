{"version":3,"sources":["components/Header/Header.jsx","constants.js","components/Bucket/Bucket.jsx","components/Bucket/Bucket.styles.js","components/OptionsSelector/OptionsSelector.jsx","components/OptionsSelector/OptionsSelector.styles.js","components/AvailableOptions/AvailableOptions.jsx","components/SelectedOptions/SelectedOptions.jsx","utils/lists.js","components/Configurations/Configurations.jsx","components/Configurations/Configurations.styles.js","components/SolutionTab/SolutionTab.jsx","components/SolutionTab/SolutionTab.styles.js","components/App/App.jsx","components/App/App.styles.js","index.js"],"names":["withStyles","props","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","Typography_default","variant","color","globalBuckets","theme","Object","objectSpread","mixins","gutters","marginBottom","spacing","unit","paddingTop","paddingBottom","heading","fontSize","list","width","backgroundColor","palette","background","paper","listDragged","listItemDragged","pink","listItemTextDragged","_ref","bucketName","items","type","droppableBucket","index_es","elevation","component","react_beautiful_dnd_esm","droppableId","concat","isDropDisabled","toConsumableArray","indexOf","provided","snapshot","assign","classnames","isDraggingOver","ref","innerRef","droppableProps","dense","map","item","index","key","Name","draggableId","RootRef_default","rootRef","draggableProps","dragHandleProps","style","isDragging","undefined","primary","placeholder","marginTop","title","stages","bucket","Bucket_Bucket","AvailableOptions","availableItems","OptionsSelector_OptionsSelector","SelectedOptions","selectedItems","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","sourceIndex","destinationIndex","sourceClone","destClone","_sourceClone$splice","Configurations","state","expanded","handleChange","panel","event","_this","setState","_this$props","this","usedLibraries","onChange","expandIcon","ExpandMore_default","size","values","lib","join","getConfig","React","Component","SolutionTab","selectedArchetype","keys","data","Set","target","value","onDragEnd","sourceColumnItems","destinationColumnItems","_this$state","_source$droppableId$s","split","_source$droppableId$s2","sourceColumn","sourceBucket","_destination$droppabl","_destination$droppabl2","destinationColumn","destinationBucket","rearranged","prevState","defineProperty","newUsedLibraries","add","Library","delete","onDragStart","render","_this$state2","autoComplete","formControl","htmlFor","inputProps","name","id","arch","container","justify","xs","AvailableOptions_AvailableOptions","SelectedOptions_SelectedOptions","components_Configurations_Configurations","minWidth","App","currentSol","onTabClick","Header","tabs","sol","label","components_SolutionTab_SolutionTab","padding","ReactDOM","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c34dcb8c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Pipeline Catalogue\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles({})(ButtonAppBar);\n","export const globalBuckets = [\"Misc\"];\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Bucket.styles\";\nimport { globalBuckets } from \"../../constants\";\n\nfunction Bucket({ classes, bucketName, items, type, droppableBucket }) {\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Typography variant=\"h6\" component=\"h6\">\n        {bucketName}\n      </Typography>\n      <Droppable\n        droppableId={`${type}-${bucketName}-Droppable`}\n        isDropDisabled={\n          [...globalBuckets, bucketName].indexOf(droppableBucket) < 0\n        }\n      >\n        {(provided, snapshot) => (\n          <div\n            className={classnames(\n              classes.list,\n              snapshot.isDraggingOver && classes.listDragged\n            )}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <List dense={true}>\n              {items && items[bucketName]\n                ? items[bucketName].map((item, index) => (\n                    <Draggable\n                      key={item.Name}\n                      draggableId={`${type}-${bucketName}-${item.Name}`}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <RootRef rootRef={provided.innerRef}>\n                          <ListItem\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={provided.draggableProps.style}\n                            classes={{\n                              root: snapshot.isDragging\n                                ? classes.listItemDragged\n                                : undefined\n                            }}\n                          >\n                            <ListItemText\n                              primary={item.Name}\n                              classes={{\n                                primary: snapshot.isDragging\n                                  ? classes.listItemTextDragged\n                                  : undefined\n                              }}\n                            />\n                          </ListItem>\n                        </RootRef>\n                      )}\n                    </Draggable>\n                  ))\n                : null}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    </Paper>\n  );\n}\n\nBucket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Bucket);\n","import { pink } from \"@material-ui/core/colors\";\n\nexport default theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    marginBottom: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listDragged: {\n    backgroundColor: \"lightgrey\"\n  },\n  listItemDragged: {\n    backgroundColor: pink[500]\n  },\n  listItemTextDragged: {\n    color: \"#fff\"\n  }\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classnames from \"classnames\";\n\nimport stages from \"../../data/stages.json\";\nimport Bucket from \"../Bucket\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./OptionsSelector.styles\";\n\nfunction OptionsSelector({\n  className,\n  classes,\n  items,\n  title,\n  type,\n  droppableBucket\n}) {\n  return (\n    <div className={classnames(className, classes.root)}>\n      <Typography variant=\"h2\" className={classes.heading}>\n        {title}\n      </Typography>\n      {stages.map(bucket => {\n        return (\n          <Bucket\n            key={bucket}\n            bucketName={bucket}\n            items={items}\n            type={type}\n            droppableBucket={droppableBucket}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(OptionsSelector);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction AvailableOptions({ className, availableItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={availableItems}\n      title=\"Available Options\"\n      type=\"available\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default AvailableOptions;\n","import React from \"react\";\nimport OptionsSelector from \"../OptionsSelector/OptionsSelector\";\n\nfunction SelectedOptions({ className, selectedItems, droppableBucket }) {\n  return (\n    <OptionsSelector\n      className={className}\n      items={selectedItems}\n      title=\"Selected Options\"\n      type=\"selected\"\n      droppableBucket={droppableBucket}\n    />\n  );\n}\n\nexport default SelectedOptions;\n","// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, sourceIndex, destinationIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination || []);\n  const [removed] = sourceClone.splice(sourceIndex, 1);\n\n  destClone.splice(destinationIndex, 0, removed);\n\n  const result = { source: sourceClone, destination: destClone };\n  return result;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport classnames from \"classnames\";\n\nimport {\n  withStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport styles from \"./Configurations.styles\";\n\nconst getConfig = usedLibraries => {\n  return `config:${\n    usedLibraries && usedLibraries.size\n      ? `\n    libraries:\n${Array.from(usedLibraries.values())\n          .map(lib => `\\t- ${lib}`)\n          .join(\"\\n\")}\n`\n      : \"\"\n  }`;\n};\n\nconst getPipeline = () => \"\";\n// `\n// @Library('conduit')_\n\n// pipeline {\n//   agent any\n//   options {\n//     {{#options}}\n//     {{.}}\n//     {{/options}}\n//   }\n//   stages {\n//     {{#stages}}\n//     {{#if methods}}\n//     stage('{{ name }}') {\n//       steps {\n//         {{#unless noUnstash}}\n//         unstash 'src'\n//         {{/unless}}\n//         {{#methods}}\n//         {{#with (lookup ../../methods .) as |method|}}\n//         {{#unless isCore}}{{method.src}}.{{/unless}}{{method.name}} {{method.defaultArgs}}\n//         {{/with}}\n//         {{/methods}}\n//       }\n//     }\n//     {{/if}}\n//     {{/stages}}\n//   }\n//   {{#if post}}\n//   post {\n//     always {\n//       script {\n//       {{#post}}\n//           {{.}}\n//       {{/post}}\n//       }\n//     }\n//   }\n//   {{/if}}\n// }\n// `;\n\nclass Configurations extends React.Component {\n  state = {\n    expanded: null\n  };\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false\n    });\n  };\n\n  render() {\n    const { className, classes, usedLibraries } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className={classnames(className, classes.root)}>\n        <Typography variant=\"h2\" className={classes.heading}>\n          Configurations\n        </Typography>\n        <ExpansionPanel\n          expanded={expanded === \"pipeline\"}\n          onChange={this.handleChange(\"pipeline\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Pipeline</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <pre>{getPipeline()}</pre>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel\n          expanded={expanded === \"config\"}\n          onChange={this.handleChange(\"config\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              config/Jenkinsfile.yaml\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <pre>{getConfig(usedLibraries)}</pre>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Configurations);\n","export default theme => ({\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  withStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport styles from \"./SolutionTab.styles\";\nimport AvailableOptions from \"../AvailableOptions\";\nimport SelectedOptions from \"../SelectedOptions\";\nimport { move, reorder } from \"../../utils/lists\";\nimport Configurations from \"../Configurations\";\n\nclass SolutionTab extends React.Component {\n  state = {\n    selectedArchetype: Object.keys(this.props.data)[0],\n    availableItems: this.props.data[Object.keys(this.props.data)[0]],\n    selectedItems: {},\n    usedLibraries: new Set(),\n    droppableBucket: null\n  };\n\n  handleChange = event => {\n    this.setState({\n      selectedArchetype: event.target.value\n    });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const { availableItems, selectedItems } = this.state;\n    const [sourceColumn, sourceBucket] = source.droppableId.split(\"-\");\n    const [\n      destinationColumn,\n      destinationBucket\n    ] = destination.droppableId.split(\"-\");\n    let sourceColumnItems, destinationColumnItems;\n\n    if (sourceColumn === \"available\") {\n      sourceColumnItems = availableItems;\n      destinationColumnItems = selectedItems;\n    } else {\n      sourceColumnItems = selectedItems;\n      destinationColumnItems = availableItems;\n    }\n\n    if (sourceColumn === destinationColumn) {\n      const rearranged = reorder(\n        sourceColumnItems[sourceBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        return sourceColumn === \"available\"\n          ? {\n              availableItems: {\n                ...prevState.availableItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            }\n          : {\n              selectedItems: {\n                ...prevState.selectedItems,\n                [sourceBucket]: rearranged\n              },\n              droppableBucket: null\n            };\n      });\n    } else {\n      const rearranged = move(\n        sourceColumnItems[sourceBucket],\n        destinationColumnItems[destinationBucket],\n        source.index,\n        destination.index\n      );\n      this.setState(prevState => {\n        const newUsedLibraries = new Set(prevState.usedLibraries);\n        if (sourceColumn === \"available\") {\n          newUsedLibraries.add(\n            availableItems[sourceBucket][source.index].Library\n          );\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [sourceBucket]: rearranged.source\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [destinationBucket]: rearranged.destination\n            },\n            droppableBucket: null,\n            usedLibraries: newUsedLibraries\n          };\n        } else {\n          newUsedLibraries.delete(\n            selectedItems[sourceBucket][source.index].Library\n          );\n          return {\n            availableItems: {\n              ...prevState.availableItems,\n              [destinationBucket]: rearranged.destination\n            },\n            selectedItems: {\n              ...prevState.selectedItems,\n              [sourceBucket]: rearranged.source\n            },\n            droppableBucket: null,\n            usedLibraries: newUsedLibraries\n          };\n        }\n      });\n    }\n  };\n\n  onDragStart = ({ source }) => {\n    const { droppableId } = source;\n    const bucket = droppableId.split(\"-\")[1];\n    this.setState({\n      droppableBucket: bucket\n    });\n  };\n\n  render = () => {\n    const { className, classes, data } = this.props;\n    const {\n      selectedArchetype,\n      availableItems,\n      selectedItems,\n      droppableBucket,\n      usedLibraries\n    } = this.state;\n    return (\n      <div>\n        <form className={className} autoComplete=\"off\">\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"arch\">\n              <Typography>Archetype</Typography>\n            </InputLabel>\n            <Select\n              value={selectedArchetype}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"archetype\",\n                id: \"arch\"\n              }}\n            >\n              {Object.keys(data).map(arch => (\n                <MenuItem key={arch} value={arch}>\n                  <Typography>{arch}</Typography>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </form>\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Grid container justify=\"center\" spacing={32}>\n            <Grid item xs={3}>\n              <AvailableOptions\n                availableItems={availableItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <SelectedOptions\n                selectedItems={selectedItems}\n                droppableBucket={droppableBucket}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Configurations usedLibraries={usedLibraries} />\n            </Grid>\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  };\n}\n\nexport default withStyles(styles)(SolutionTab);\n","export default theme => ({\n  formControl: {\n    minWidth: 120,\n    marginTop: theme.spacing.unit\n  }\n});\n","import React, { Component } from \"react\";\n\nimport Header from \"../Header\";\nimport { Tabs, Tab, withStyles } from \"@material-ui/core\";\nimport data from \"../../data/libraries.json\";\nimport SolutionTab from \"../SolutionTab/SolutionTab\";\nimport styles from \"./App.styles\";\n\nclass App extends Component {\n  state = {\n    currentSol: 0\n  };\n\n  onTabClick = (event, value) => {\n    this.setState({ currentSol: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { currentSol } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <div className={classes.tabs}>\n          <Tabs value={currentSol} onChange={this.onTabClick}>\n            {Object.keys(data).map(sol => (\n              <Tab key={sol} label={sol} />\n            ))}\n          </Tabs>\n          {Object.keys(data).map(\n            (sol, index) =>\n              currentSol === index ? (\n                <SolutionTab key={sol} data={data[sol]} />\n              ) : null\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default theme => ({\n  tabs: {\n    padding: theme.spacing.unit * 2\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}