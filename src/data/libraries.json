{
  "Jenkins": {
    "Java": {
      "Unit Test": [
        {
          "Solution": "Jenkins",
          "Archetype": "Java",
          "Name": "SonarQube",
          "Description": "Ability to run Sonar",
          "Command": ["Sonarrun", "exit"],
          "Stage": "Unit Test",
          "Minimum SolutionVersion": "2.12",
          "Version": "1.0",
          "Tags": "Jenkins, Sonar, SharedLib",
          "Github Repo": "github.com/sonar",
          "Platform": "multi",
          "Dependencies": "pipelineplugin",
          "Library": "sonarqube@master",
          "Config": "pipelines/conf/sonarqube.yaml"
        }
      ],
      "MavenBuild": [
        {
          "Solution": "Jenkins",
          "Archetype": "Java",
          "Name": "Maven Java Build",
          "Description": "Creating an build archive for a Java project using Maven as build tool.",
          "Command": "runMavenBuild",
          "Stage": "Build",
          "Minimum SolutionVersion": "2.12",
          "Version": "1.0",
          "Tags": "Jenkins, Maven, Java, Build, Unix_only",
          "Github Repo": "https://github.lbg.eu-gb.bluemix.net/jenkins-shared-library/java-maven-build_nix",
          "Platform": "nix",
          "Dependencies": "workflowLibs",
          "Library": "maven-bulid@master",
          "Config": "pipelines/conf/build.yaml"
        }
      ]
    },
    "NodeJS": {
      "NPMBuild": [
        {
          "Solution": "Jenkins",
          "Archetype": "Java",
          "Name": "NodeJS NPM Build",
          "Description": "Creating an build archive for a NodeJS project using NPM scripts as build tool.",
          "Command": "runNPMBuild",
          "Stage": "Build",
          "Minimum SolutionVersion": "2.12",
          "Version": "1.0",
          "Tags": "Jenkins, NodeJS, NPM, Build, Unix_only",
          "Github Repo": "https://github.lbg.eu-gb.bluemix.net/jenkins-shared-library/build-nodejs_nix",
          "Platform": "nix",
          "Dependencies": "workflowLibs",
          "Library": "npm-bulid@master",
          "Config": "pipelines/conf/build.yaml"
        }
      ]
    }
  },
  "Ansible": {
    "Role": {
      "Rancher": [
        {
          "Solution": "Ansible",
          "Archetype": "Role",
          "Name": "Rancher",
          "Description": "Role to install Rancher",
          "Command": "ansible-playbook rancher",
          "Stage": "Rancher",
          "Minimum SolutionVersion": "2.12",
          "Version": "1.0",
          "Tags": "Ansible, Roles, Rancher",
          "Github Repo": "github.com/ansible/rancher",
          "Platform": "multi",
          "Dependencies": "rke, docker",
          "Library": "",
          "Config": ""
        }
      ]
    }
  }
}
